Build a scalable SaaS platform that provides a customizable, AI-powered live chat widget for healthcare provider websites. The AI assistant should sound and behave like a real human, engaging visitors naturally and helping them find relevant information about the provider.

‚∏ª

üîç Core Functionality:
	‚Ä¢	Each SaaS customer (healthcare provider) will embed a live chat widget on their website.
	‚Ä¢	The AI assistant will reference a custom-generated profile of that provider in real-time to answer visitor questions.
	‚Ä¢	This profile will be generated by periodically scanning the provider‚Äôs website to extract relevant content, such as:
	‚Ä¢	Services provided
	‚Ä¢	Locations served
	‚Ä¢	Insurance accepted
	‚Ä¢	Intake process
	‚Ä¢	Contact information per location
	‚Ä¢	The extracted content will be structured into a Markdown or JSON file stored on the backend.
	‚Ä¢	The AI bot should:
	‚Ä¢	Respond with helpful, human-like replies
	‚Ä¢	Ask qualifying questions to gather visitor information
	‚Ä¢	Determine whether the visitor is a potential lead (based on location, services, etc.)
	‚Ä¢	If qualified, save the lead to the database and trigger a follow-up, such as:
	‚Ä¢	Email notification with chat summary
	‚Ä¢	CRM integration or webhook call

‚∏ª

ü§ñ AI Behavior:
	‚Ä¢	The chat assistant should use Advanced AI (e.g., OpenAI or Claude) to deliver natural, conversational responses.
	‚Ä¢	It should be helpful, friendly, and always try to guide the visitor toward the next step (e.g., intake, booking, or follow-up).
	‚Ä¢	The bot should extract and summarize visitor inputs to create structured lead records.

‚∏ª

‚òÅÔ∏è Tech Stack Requirements:

Use a modern, scalable tech stack including:
	‚Ä¢	Frontend & App Framework:
	‚Ä¢	Next.js (React-based) for frontend and server-side logic
	‚Ä¢	Cloudflare Serverless Stack:
	‚Ä¢	Cloudflare Workers ‚Äì For handling APIs, business logic, chat routing
	‚Ä¢	Workers KV ‚Äì For storing lightweight config, settings, and metadata
	‚Ä¢	Cloudflare R2 ‚Äì For storing profile files and other unstructured content
	‚Ä¢	Cloudflare D1 ‚Äì For relational data like customer accounts, leads, settings
	‚Ä¢	Durable Objects ‚Äì For real-time session handling, rate-limiting, or shared chat context

‚∏ª

üß† Website Scanning & Content Extraction:
	‚Ä¢	We will integrate a third-party scraping API (TBD) to periodically crawl each customer‚Äôs website.
	‚Ä¢	The scraped content will be processed through an AI pipeline to extract and structure information.
	‚Ä¢	Output will be stored in a format the chatbot can reference (e.g., Markdown or structured JSON).

‚∏ª

üé® Widget Customization:
	‚Ä¢	The live chat widget must be fully customizable per customer, allowing them to adjust branding:
	‚Ä¢	Colors
	‚Ä¢	Fonts
	‚Ä¢	Logo
	‚Ä¢	Greeting messages
	‚Ä¢	Positioning on site

‚∏ª

üõ† Admin & Customer Dashboards:
	‚Ä¢	Admin Portal:
	‚Ä¢	Manage SaaS customers
	‚Ä¢	Monitor usage, leads, and chat metrics
	‚Ä¢	Control pricing and billing options
	‚Ä¢	Customer Dashboard:
	‚Ä¢	View and manage leads
	‚Ä¢	Update business profile information
	‚Ä¢	Customize chat widget settings

‚∏ª

üí≥ Billing Model (TBD):

The platform should support flexible billing models:
	‚Ä¢	Charge per qualified lead
	‚Ä¢	Charge per chat
	‚Ä¢	Monthly subscription with optional usage-based pricing

‚∏ª
